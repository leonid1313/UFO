{"version":3,"sources":["components/Header/Header.jsx","components/Loader/Loader.jsx","components/About/About.jsx","store/type.js","components/Card/Card.jsx","components/Pagination/Pagination.jsx","components/CardList/CardList.jsx","components/Users/Users.jsx","store/action/usersActions.js","App.js","reportWebVitals.js","store/reducers/userReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["Header","className","Loader","About","props","Card","Img","variant","src","location","data","largeImageURL","Body","Title","user","Text","type","views","comments","tags","likes","downloads","GET_USERS","Cards","image","item","tagsArr","id","split","to","pathname","map","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","Button","onClick","CardList","items","useState","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","valueOfSort","setValueOfSort","onChangeStatus","useCallback","event","target","value","sort","a","b","searchTerm","setSearchTerm","useEffect","onSubmit","preventDefault","Form","Control","placeholder","onChange","results","filter","person","toLowerCase","includes","Select","length","link","pageURL","userName","pageNumber","users","this","getUsers","React","Component","connect","state","dispatch","axios","get","res","payload","hits","console","log","App","loader","setLoader","setTimeout","basename","path","exact","component","Users","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a415c1e.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss'\n\nfunction Header () {\n\n    return (\n      <div className=\"container-header\">\n        <h1 className=\"title-header\">Cats</h1>\n      </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Loader.scss'\n\nfunction Loader () {\n  return (\n    <div className=\"containerLoader\">\n      Leonid Manuilenko\n    </div>\n  )\n} \n\nexport default Loader;","import React from 'react'\nimport './About.scss'\nimport Card from 'react-bootstrap/Card';\n\nfunction About ({\n  ...props\n}) {\n    return (\n      <div className=\"container-about\">\n        <Card>\n          <Card.Img variant=\"top\" src={props.location.data.largeImageURL} />\n          <Card.Body>\n            <Card.Title>User name: {props.location.data.user}</Card.Title>\n            <Card.Text>\n              Type: {props.location.data.type}\n            </Card.Text>\n            <Card.Text>\n              Views: {props.location.data.views}\n            </Card.Text>\n            <Card.Text>\n              Comments: {props.location.data.comments}\n            </Card.Text>\n            <Card.Text>\n              Tags: {props.location.data.tags}\n            </Card.Text>\n            <Card.Text>\n              Likes: {props.location.data.likes}\n            </Card.Text>\n            <Card.Text>\n              Downloads: {props.location.data.downloads}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n}\n\nexport default About;","export const GET_USERS = 'GET_USERS';\nexport const USERS_ERROR = 'USERS_ERROR'","import React from 'react';\nimport './Card.scss'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\n\nfunction Cards ({\n  image,\n  likes,\n  tags,\n  comments,\n  item,\n  id\n}) {\n  let tagsArr = tags.split(',')\n\n    return (\n      <div className=\"container-card\">\n        <Card>\n          <div className=\"container-image\">\n          <Link \n              className=\"link-about\"\n              to={{\n                pathname: `/about/${item.id}`,\n                data: item,\n              }}\n            >\n            </Link>\n            <Card.Img className=\"image\" variant=\"top\" src={image}/>\n          </div>\n          <Card.Body>\n            <Card.Text>\n              Likes: {likes}\n            </Card.Text>\n            <Card.Text>\n              Comments: {comments}\n            </Card.Text>\n            <Card.Text>\n              Tags:\n                {tagsArr.map(item => (\n                  <>\n                    <span className=\"tags-span\">{item}</span>\n                  </>\n                ))}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n}\n\nexport default Cards;\n","import React from 'react';\nimport './Pagination.scss'\nimport Button from 'react-bootstrap/Button';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <Button className=\"button-pagination\" onClick={() => paginate(number)} variant=\"primary\">{number}</Button>{' '}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React, {useState, useEffect, useCallback} from 'react'\nimport Card from '../Card/Card.jsx'\nimport './CardList.scss'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Pagination from '../../components/Pagination/Pagination.jsx'\n\nfunction CardList ({\n  items,\n}) {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(12);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  let currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const [valueOfSort, setValueOfSort] = useState([...currentPosts])\n\n    const onChangeStatus = useCallback (\n      ( event) => {\n        const { value } = event.target;\n        switch (value) {\n          case 'Sort by':\n            setValueOfSort([...currentPosts])\n            break;\n    \n          case 'Likes':\n            setValueOfSort([...currentPosts].sort(function(a, b) {\n              return b.likes - a.likes;\n            }))\n            break;\n    \n          case 'Comments':\n            setValueOfSort([...currentPosts].sort(function(a, b) {\n              return  b.comments - a.comments;\n            }))\n            break;\n    \n          default:\n            break;\n        }\n      }, [currentPosts]\n    ) \n  \n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const handleChange = (event) => {\n        setSearchTerm(event.target.value);\n      }\n\n    const find = () => {\n      if (setSearchTerm === '') {\n        setValueOfSort([...currentPosts]);\n      } else {\n        const results = currentPosts.filter(person =>\n          person.tags.toLowerCase().includes(searchTerm)\n        );\n        setValueOfSort(results);\n      }\n    }\n    useEffect(() => setValueOfSort(currentPosts), [items, currentPage])\n\n    return (\n      <>\n        <div className=\"container-sort\">\n          <form className=\"form\" onSubmit={(event) => event.preventDefault()}>\n            <Form.Control type=\"text\"\n              placeholder=\"Search for tags\"\n              value={searchTerm}\n              onChange={handleChange}\n            />\n            <Button className=\"button-find\" variant=\"primary\" onClick={find} >Find</Button>{' '}\n          </form>\n          <Form.Select onChange={onChangeStatus} id=\"sort\" aria-label=\"Default select example\">\n            <option value=\"Sort by\">Sort by</option>\n            <option value=\"Likes\">Likes</option>\n            <option value=\"Comments\">Comments</option>\n          </Form.Select>\n        </div>\n        <div className=\"container\">\n          { (valueOfSort.length === 0)\n            ? <h1>No card with this tag</h1>\n            : valueOfSort.map(item => (\n            <>\n              <Card\n                key={item.id}\n                link={item.pageURL}\n                userName={item.user}\n                image={item.largeImageURL}\n                likes={item.likes}\n                tags={item.tags}\n                comments={item.comments}\n                item={item}\n                id={item.id}\n              />\n            </>\n          ))}\n        </div>\n        <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={ (valueOfSort.length < 12)\n            ? currentPosts.length\n            : items.length}\n          paginate={paginate}\n        />\n      </>\n    )\n}\n\nexport default CardList\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsers } from \"../../store/action/usersActions\";\n\nimport CardList from '../../components/CardList/CardList.jsx'\nimport \"./Users.scss\";\n\nclass users extends React.Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n  render() {\n    const { users } = this.props.users;\n\n    return (\n      <>\n        <div className=\"container-search\">\n          <CardList items={users}/>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ users: state.users });\n\nexport default connect(mapStateToProps, { getUsers })(users);","import {GET_USERS, USERS_ERROR} from '../type'\nimport axios from 'axios'\n\nexport const getUsers = () => async dispatch => {\n    \n    try{\n        const res = await axios.get(`https://pixabay.com/api/?key=23130780-02838ef9e7fd441ed11d8cbfa&q=cats&image_type=all&per_page=100`)\n        dispatch( {\n            type: GET_USERS,\n            payload: res.data.hits\n        })\n    }\n    catch(e){\n        dispatch( {\n            type: USERS_ERROR,\n            payload: console.log(e),\n        })\n    }\n\n}","import React, {useEffect, useState} from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Header from './components/Header/Header.jsx'\nimport Loader from './components/Loader/Loader.jsx'\nimport About from './components/About/About.jsx'\n\nimport './App.scss'\n\nimport Users from './components/Users/Users';\n\n\nfunction App () {\n\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(false);\n    setTimeout(() => {\n      setLoader(true)\n    }, 1000)\n  }, []);\n\n  return (\n    <>\n      {loader \n        ? (\n          <>\n            <Router basename=\"/UFO\">\n              <Header />\n              <Route path='/' exact component={Users} />\n              <Route path=\"/about/:item\" exact component={About}/>\n            </Router>\n          </>\n          )\n        :  <Loader/>\n      }\n    </>\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {GET_USERS} from '../type'\n\nconst initialState = {\n    users:[],\n    loading:true\n}\n\nexport default function userReducer (state = initialState, action){\n\n    switch(action.type){\n\n        case GET_USERS:\n        return {\n            ...state,\n            users:action.payload,\n            loading:false\n\n        }\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\nimport userReducer from './userReducer.js'\n\nexport default combineReducers({\n  users: userReducer\n})","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport rootReducer from './reducers'\n\nconst initalState = {\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './store/store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}